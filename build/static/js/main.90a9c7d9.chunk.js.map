{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Card","children","cardStyle","display","width","maxHeight","backgroundColor","gridTemplateColumns","gridTemplateRows","style","height","background","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","flexDirection","alignItems","justifyContent","overflow","App","selectedButtonStyle","color","border","fontSize","fontWeight","margin","borderRadius","boxShadow","unselectedButtonStyle","position","bottom","right","useState","selectedNote","setSelectedNote","a","toggleA","aS","toggleAS","b","toggleB","c","toggleC","cS","toggleCS","d","toggleD","dS","toggleDS","e","toggleE","f","toggleF","fS","toggleFS","g","toggleG","gS","toggleGS","isShown","setIsShown","gridRow","gridColumn","padding","textAlign","marginTop","undefined","onClick","id","noteArray","push","randomIndex","Math","round","random","length","getRandomNote","onMouseEnter","onMouseLeave","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a9c7d9.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\n\nconst Card = ({children}) => {\n  const cardContainerStyle = {\n    height: '100vh',\n    width: '100%',\n    \nbackground: 'linear-gradient(90deg, rgba(171,161,24,1) 0%, rgba(211,26,26,1) 50%, rgba(171,161,24,1) 100%)',\nbackgroundImage: 'url(\"./notesbg.png\")',\nbackgroundRepeat: 'no-repeat',\nbackgroundPosition: 'center',\nbackgroundSize: 'cover',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n  \n  const cardStyle = {\n     display: 'grid',\n     width: '300px',\n     maxHeight: '460px',\n     backgroundColor: 'gray',\n    gridTemplateColumns: '1fr 1fr 1fr',\n    gridTemplateRows: '1fr 1fr 1fr 1fr 1fr 1fr 1fr',\n    \n    backgroundColor: 'white',\n    border: '4px solid black',\n    boxShadow: '10px 10px 0px 0px black ',\n    padding: '1rem',\n\n  }\n\n  return <>\n  <div style={cardContainerStyle}>\n     <div style={cardStyle}>\n        {children}\n     </div>\n     </div>\n  </>\n}\n\n\nconst App = ()=>  {\n  const selectedButtonStyle = {\n   \n    backgroundColor: 'white',\n    color: 'black',\n    border: '3px solid black',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    margin: '0.5rem',\n    borderRadius: '0.5rem',\n    boxShadow: '4px 4px 0px 0px black',\n\n  }\n  const unselectedButtonStyle = {\n    backgroundColor: '#eee',\n    color: 'black',\n    border: '3px  solid black',\n    boxShadow: '1px 1px 0px 0px black',\n    fontSize: '1.5rem',\n    margin: '0.5rem',\n    borderRadius: '0.5rem',\n    position: 'relative',\n    bottom: '-2px',\n    right: '-2px',\n    fontWeight: 'bold',\n\n  } \n  const runButtonStyle = {\n    backgroundColor: 'white',\n    color: 'black',\n    border: '3px solid black',\n    borderRadius: '1rem',\n    boxShadow: '6px 6px 0px 0px black ',\n    fontSize: '1.5rem',\n    gridRow: '7/8',\n    gridColumn: '1/4',\n    position: 'relative',\n    bottom: '2px',\n    right: '2px',\n    fontWeight: 'bold',\n  }\n  const hoverRunStyle = {\n    backgroundColor: '#ddd',\n    color: 'black',\n    border: '3px solid black',\n    borderRadius: '1rem',\n    boxShadow: '2px 2px 0px 0px black ',\n    fontSize: '1.5rem',\n    gridRow: '7/8',\n    gridColumn: '1/4',\n    position: 'relative',\n    bottom: '-1px',\n    right: '-1px'\n  }\n  const answerStyle = {\n    \n    color: 'black',\n    gridRow: '2/3',\n    gridColumn: '1/4',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'Center',\n    fontSize: '2rem',\n  \n   \n    marginTop: '.5rem',\n    fontWeight: 'bold'\n  }\n  const titleStyle = {\n    color: '#eee',\n    backgroundColor: '#111',\n    boxShadow: '4px 4px 10px 0px #777',\n    gridRow: '1/2',\n    gridColumn: '1/4',\n    height: '100%',\n    padding: '0',\n    margin: '0',\n    textAlign: 'center',\n    border: '3px solid black',\n    borderRadius: '.25rem',\n    \n   \n  }\n  const [selectedNote, setSelectedNote] = useState('')\n  const [ a, toggleA ] = useState(true)\n  const [ aS, toggleAS ] = useState(true)\n  const [ b, toggleB ] = useState(true)\n  const [ c, toggleC ] = useState(true)\n  const [ cS, toggleCS ] = useState(true)\n  const [ d, toggleD ] = useState(true)\n  const [ dS, toggleDS ] = useState(true)\n  const [ e, toggleE ] = useState(true)\n  const [ f, toggleF ] = useState(true)\n  const [ fS, toggleFS ] = useState(true)\n  const [ g, toggleG ] = useState(true)\n  const [ gS, toggleGS ] = useState(true)\n\n  const getRandomNote = () => {\n    const noteArray = [];\n    a && noteArray.push('A')\n    aS && noteArray.push('A#')\n    b && noteArray.push('B')\n    c && noteArray.push('C')\n    cS && noteArray.push('C#')\n    d && noteArray.push('D')\n    dS && noteArray.push('D#')\n    e && noteArray.push('E')\n    f && noteArray.push('F')\n    fS && noteArray.push('F#')\n    g && noteArray.push('G')\n    gS && noteArray.push('G#')\n    const randomIndex = Math.round(Math.random() * (noteArray.length - 1));\n    setSelectedNote(noteArray[randomIndex])\n  }\n\n  const [isShown, setIsShown] = useState(false);\n\n\n  return (\n    <>\n    <Card>\n      <div style={titleStyle}><h1>Nertobin</h1><h2>Random note generator</h2></div>\n      <div style={answerStyle}>\n        {`${selectedNote === undefined ? 'Select Notes' : selectedNote}`}\n      </div>\n      <button onClick={()=>{toggleA(!a)}} style={a ? selectedButtonStyle : unselectedButtonStyle} id='0'>A</button>\n      <button onClick={()=>{toggleAS(!aS)}} style={aS ? selectedButtonStyle : unselectedButtonStyle}  id='1'>A#</button>\n      <button onClick={()=>{toggleB(!b)}} style={b ? selectedButtonStyle : unselectedButtonStyle} id='2'>B</button>\n      <button onClick={()=>{toggleC(!c)}} style={c ? selectedButtonStyle : unselectedButtonStyle} id='3'>C</button>\n      <button onClick={()=>{toggleCS(!cS)}} style={cS ? selectedButtonStyle : unselectedButtonStyle} id='4'>C#</button>\n      <button onClick={()=>{toggleD(!d)}} style={d ? selectedButtonStyle : unselectedButtonStyle} id='5'>D</button>\n      <button onClick={()=>{toggleDS(!dS)}} style={dS ? selectedButtonStyle : unselectedButtonStyle} id='6'>D#</button>\n      <button onClick={()=>{toggleE(!e)}} style={e ? selectedButtonStyle : unselectedButtonStyle} id='7'>E</button>\n      <button onClick={()=>{toggleF(!f)}} style={f ? selectedButtonStyle : unselectedButtonStyle} id='8'>F</button>\n      <button onClick={()=>{toggleFS(!fS)}} style={fS ? selectedButtonStyle : unselectedButtonStyle} id='9'>F#</button>\n      <button onClick={()=>{toggleG(!g)}} style={g ? selectedButtonStyle : unselectedButtonStyle} id='10'>G</button>\n      <button onClick={()=>{toggleGS(!gS)}} style={gS ? selectedButtonStyle : unselectedButtonStyle} id='11'>G#</button>\n      <button onClick={()=>getRandomNote()} style={isShown ? hoverRunStyle : runButtonStyle} onMouseEnter={()=>setIsShown(true)}onMouseLeave={()=>setIsShown(false)}>Get Note</button>\n      \n    </Card>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}